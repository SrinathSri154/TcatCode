#Platform
#Choose either 'windows' or 'linux' platform on which the tests will run
cct.run.os=windows

#Browser configuration
#Choose browser chrome, firefox or remote to run tests
cct.run.browser=chrome
cct.run.browser.headless=true
cct.run.browser.windows.chromeDriverPath=./conf/chromedriver-windows-32bit.exe
cct.run.browser.linux.chromeDriverPath=./conf/chromedriver-linux-64bit
cct.run.browser.windows.firefoxPath=./conf/geckodriver-windows-64bit.exe
cct.run.browser.linux.firefoxPath=./conf/geckodriver-linux-64bit

#Choose type as "development" for CCT development environment or as "portal" to run on deployed portal server,"CEMNova" for Cem app portal
cct.env.type=portal

#Choose 'true' if tests should report for no data or stale widget. Selecting 'false' will make tests ignore for no data or stale widgets
cct.env.reportNoDataAndStaleWidgetAsFailures=true

#Choose "true" if screenshots required in the output folder or choose "false" which will not create screenshots
cct.env.captureScreenshots=true

#Define number of rounds to run. Increase the count for stablitiy tests accordingly
cct.stability.numberOfRounds=1

#Choose "false" if only landing page to be tested and drill downs should not be verified
cct.drilldown.test=true

#Choose "true" to enable proxy settings. Default is set to "false"
cct.proxy=false

#Define the number of parellel nodes to execute
#Example: cct.parallelExecution.nodes=node1,node2,node3
cct.parallelExecution.nodes=node1

#Configuration for portal environment with default user details
cct.env.portal.url=https://ingress-edge.digi.com/ca4ci/portal-ui/usecase-library.html?application=ca4ci
cct.env.portal.user.firstName=digiuser1
cct.env.portal.user.lastName=1
cct.env.portal.user=digiuser1
cct.env.portal.password=Test@123
cct.env.portal.designer.firstName=
cct.env.portal.designer.lastName=
cct.env.portal.designer.user=designer
cct.env.portal.designer.password=designer
cct.env.portal.admin.user=Administrator
cct.env.portal.admin.password=administrator
cct.env.portal.cspowner.user=cspowner@csp.com
cct.env.portal.cspowner.password=Test@123

#CCT features folder. Provide a specific folder or feature file to run only those tests
#Note: This setting will be ignored if you are running in eclipse as JUnit tests
#Eg 1: node1.features= = test-scenarios/cct-widget-examples-tests/AutomationUseCase.feature
#Eg 2: node1.features= = test-scenarios/regression/hvci/
node1.features= Features/

#Define node2, node3....nodeN for parallel execution
#Example for node2
node2.features=test-scenarios/cct-widget-examples-tests/ApplyButton-SampleUsecase_Manual.feature
node2.portal.user=user2@csp.com
node2.portal.user.firstName=User2
node2.portal.user.lastName=last2
node2.portal.password=Test@123
#Example for node3
node3.features=test-scenarios/cct-widget-examples-tests/AutomationUseCase.feature
node3.portal.user=user3@csp.com
node3.portal.user.firstName=User3
node3.portal.user.lastName=last3
node3.portal.password=Test@123
#Example for node4
node4.features=test-scenarios/cct-widget-examples-tests/ApplyButton-SampleUsecase_Manual.feature
node4.portal.user=user4@csp.com
node4.portal.user.firstName=User4
node4.portal.user.lastName=last4
node4.portal.password=Test@123

#Import Bulk Users from the csv file in the below path
cct.portal.bulk.user.add.filepath=conf/BulkUser_ADD_UserData-2017-11-10T11-00-00.csv
cct.portal.bulk.user.update.filepath=conf/BulkUser_UPDATE_UserData-2017-11-10T11-00-00.csv
cct.portal.bulk.user.delete.filepath=conf/BulkUser_DELETE_UserData-2017-11-10T11-00-00.csv
cct.portal.bulk.user.addwithroles.filepath=conf/BulkUser_ADD_WITH_ROLES_UserData-2017-11-10T11-00-00.csv

#Configuration for CCT development environment
cct.env.development.useCaseLaunchURL=http://10.53.82.25:8080/cct/index.html?load=http://10.53.82.25:8080/cct/widget-examples/%s.json
cct.env.development.useCaseJsonURL=http://10.53.82.25:8080/cct/widget-examples/%s.json
cct.env.development.useCaseLaunchURL.tabUseCase1=http://10.53.82.25:8080/widget-examples/Tab-One.json
cct.env.development.useCaseLaunchURL.tabUseCase2=http://10.53.82.25:8080/widget-examples/Tab-Two.json
cct.env.development.useCaseLaunchURL.tabUseCase3=http://10.53.82.25:8080/widget-examples/Tab-Three.json
cct.env.development.useCaseLaunchURL.tabUseCase4=http://10.53.82.25:8080/widget-examples/Tab-Four.json

#Enpoint configuration for development environment
cct.portal.service.authentication=https://10.58.132.228:8443/cemboard-service-api/api/auth/v1/login
cct.portal.service.insights=https://10.58.132.228:8083/api/cemod/mock-getdata
cct.portal.service.metadata=https://10.58.132.228:8083/api/cemod/mock-getmetadata
cct.portal.sai.username=Administrator
cct.portal.sai.password=Ngdb1234
cct.portal.metadata.boxi.url=10.62.81.168:6405

#Endpoint configuration for the portal
cemod.analytics.webservice.endpoint=http://10.53.74.188:18080/analytics/service
cemod.sai.session.endpoint=https://10.62.81.254:8443/sai-ws/services/SAISessionManagementService
cemod.sai.subscription.endpoint=https://10.62.81.254:8443/sai-ws/services/SAISubscriptionService
cemod.sai.map.geocoding.url=https://nominatim.openstreetmap.org/search
cemod.sai.map.template.url=tile.openstreetmap.org
cemod.cei.configuration.root=test
cemod.cei.configuration.webservice.endpoint=test
cemod.offline.map.url=test
cemod.tnp.alert.monitor.endpoint=test
cemod.unmapped.response.values=test
cemod.sqm.url=test
    
#Implicit wait for all Web Elements in milliseconds
cct.waitForWebElementTimeOut=600000

#Wait time for widgets to render and settle down on CCT events change. Time in milliseconds(refresh, load and click) - Thread Sleep
#This will impact test runtime. Do not increase unless required & reasoned. Optmial CCT widgets rendering time is 1 second
cct.waitForWidgetsToRenderTime=10000
	
#Wait for Query Response in milliseconds - Fluent Wait
cct.waitForQueryResponseTimeOut=180000
